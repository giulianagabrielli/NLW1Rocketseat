{"ast":null,"code":"var _jsxFileName = \"/Users/giulianagabrielli/Documents/projetos-programacao/nlw1/web/src/pages/CreatePoint/index.tsx\";\nimport React, { useEffect, useState } from 'react'; //useEffect() recebe dois parâmetros, 1-qual função executar, 2-quando. ChangeEvent é a tipagem do evento.\n\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet'; //npm install leaflet react-leaflet --> lib de mapas npm install @types/react-leaflet -D. Precisa incluir um link no index.html\n\nimport api from '../../services/api'; //npm install axios --> biblioteca para integrar o react com o backend\n\nimport axios from 'axios'; //para usar as apis do IBGE\n\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [selectedUf, setSelectedUf] = useState('0'); //sempre que cria um estado para array ou objeto, precisa manualmente informar o tipo da variável que vai ser armazenada ali\n\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []); //para pegar a api do IBGE\n\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []); //para pegar as cidades do IBGE sempre que a UF mudar\n\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const citynam = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, [selectedUf]); //função de selecionar a UF\n\n  function handleSelectedUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 32\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 24\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 24\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 24\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 24\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: [-23.5668582, -46.660879],\n    zoom: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: [-23.5668582, -46.660879],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 28\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectedUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 32\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 36\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 28\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 32\n    }\n  }, \"Selecione uma Cidade\"))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 24\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 24\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 20\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 16\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/Users/giulianagabrielli/Documents/projetos-programacao/nlw1/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","Map","TileLayer","Marker","api","axios","CreatePoint","items","setItems","ufs","setUfs","selectedUf","setSelectedUf","get","then","response","data","ufInitials","map","uf","sigla","citynam","handleSelectedUf","event","target","value","logo","item","id","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent } from 'react'; //useEffect() recebe dois parâmetros, 1-qual função executar, 2-quando. ChangeEvent é a tipagem do evento.\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi'\nimport { Map, TileLayer, Marker } from 'react-leaflet'; //npm install leaflet react-leaflet --> lib de mapas npm install @types/react-leaflet -D. Precisa incluir um link no index.html\nimport api from '../../services/api'; //npm install axios --> biblioteca para integrar o react com o backend\nimport axios from 'axios'; //para usar as apis do IBGE\n\nimport './styles.css';\n\nimport logo from '../../assets/logo.svg';\n\ninterface Item {\n    id: number;\n    title: string;\n    image_url: string;\n}\n\ninterface IBGEUF {\n    sigla: string;\n}\n\ninterface IBGECity {\n    nome: string;\n}\n\nconst CreatePoint = () => {\n\n    const [items, setItems] = useState<Item[]>([]); \n    const [ufs, setUfs] = useState<string[]>([]); \n    const [selectedUf, setSelectedUf] = useState('0');\n\n    //sempre que cria um estado para array ou objeto, precisa manualmente informar o tipo da variável que vai ser armazenada ali\n    useEffect(()=>{\n        api.get('items').then(response => {\n            setItems(response.data);\n        })\n    }, []);\n\n    //para pegar a api do IBGE\n    useEffect(()=>{\n        axios\n            .get<IBGEUF[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\n            .then(response => {\n                const ufInitials = response.data.map(uf => uf.sigla);\n                setUfs(ufInitials);\n             })\n    }, []);\n\n    //para pegar as cidades do IBGE sempre que a UF mudar\n    useEffect(()=>{\n        if(selectedUf ==='0') {\n            return;\n        }\n\n        axios\n            .get<IBGECity[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\n            .then(response => {\n                const citynam = response.data.map(uf => uf.sigla);\n                setUfs(ufInitials);\n            })\n\n    }, [selectedUf]);\n\n    //função de selecionar a UF\n    function handleSelectedUf(event: ChangeEvent<HTMLSelectElement>){\n        const uf = event.target.value;\n        setSelectedUf(uf);\n    }\n\n    return (\n       <div id=\"page-create-point\">\n           <header>\n               <img src={logo} alt=\"Ecoleta\"/>\n\n               <Link to=\"/\">\n                   <FiArrowLeft />\n                   Voltar para home\n               </Link>\n           </header>\n\n           <form>\n               <h1>Cadastro do <br /> ponto de coleta</h1>\n\n               <fieldset>\n                   <legend>\n                       <h2>Dados</h2>\n                   </legend>\n\n                   <div className=\"field\">\n                       <label htmlFor=\"name\">Nome da entidade</label>\n                       <input \n                        type=\"text\"\n                        name=\"name\"\n                        id=\"name\"\n                       />\n                   </div>\n\n                   <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"email\">E-mail</label>\n                            <input \n                                type=\"text\"\n                                name=\"email\"\n                                id=\"email\"\n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\n                            <input \n                                type=\"text\"\n                                name=\"whatsapp\"\n                                id=\"whatsapp\"\n                            />\n                        </div>\n                   </div>\n               </fieldset>\n\n               <fieldset>\n                   <legend>\n                       <h2>Endereço</h2>\n                       <span>Selecione o endereço no mapa</span>\n                   </legend>\n\n                   <Map center={[-23.5668582, -46.660879]} zoom={15}>\n                        <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n\n                        <Marker position={[-23.5668582, -46.660879]} />\n                   </Map>\n\n                   <div className=\"field-group\">\n                       <div className=\"field\">\n                           <label htmlFor=\"uf\">Estado (UF)</label>\n                           <select \n                            name=\"uf\" \n                            id=\"uf\" \n                            value={selectedUf} \n                            onChange={handleSelectedUf}\n                           >\n                               <option value=\"0\">Selecione uma UF</option>\n                               {ufs.map(uf => (\n                                   <option key={uf} value={uf}>{uf}</option>\n                               ))}\n                           </select>\n                       </div>\n                       <div className=\"field\">\n                           <label htmlFor=\"city\">Cidade</label>\n                           <select name=\"city\" id=\"city\">\n                               <option value=\"0\">Selecione uma Cidade</option>\n                           </select>\n                       </div>\n                   </div>\n               </fieldset>\n\n               <fieldset>\n                   <legend>\n                       <h2>Ítens de coleta</h2>\n                       <span>Selecione o endereço no mapa</span>\n                   </legend>\n\n                   <ul className=\"items-grid\">\n                       {items.map(item => (\n                            <li key={item.id}>\n                                <img src={item.image_url} alt={item.title}/>\n                                <span>{item.title}</span>\n                            </li>  \n                       ))}\n                   </ul>\n               </fieldset>\n\n               <button type=\"submit\">Cadastrar ponto de coleta</button>\n           </form>\n       </div>\n    )\n}\n\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}